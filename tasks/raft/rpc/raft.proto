syntax = "proto3";

package raft;

service Raft {
    rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
    rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse);
}

// enum OperationType {
//     CREATE = 1;
//     READ = 0;
//     UPDATE = 2;
//     CAS = 3;
//     DELETE = 4;
// }

message CreateOperation {
    string key = 1;
    string value = 2;
}

message ReadOperation {
    string key = 1;
}

message UpdateOperation {
    string key = 1;
    string value = 2;
}

message CASOperation {
    string key = 1;
    string expectedValue = 2;
    string newValue = 3;
}

message DeleteOperation {
    string key = 1;
}

message InitOperation {
}

message LogEntry {
    uint64 term = 1;
    oneof operation {
        CreateOperation create = 2;
        ReadOperation read = 3;
        UpdateOperation update = 4;
        CASOperation cas = 5;
        DeleteOperation delete = 6;
        InitOperation init = 7;
    }
}

message AppendEntriesRequest {
    uint64 term = 1;
    uint64 leaderId = 2;
    uint64 prevLogIndex = 3;
    uint64 prevLogTerm = 4;
    repeated LogEntry entries = 5;
    uint64 leaderCommit = 6;
}

message AppendEntriesResponse {
    uint64 term = 1;
    bool success = 2;
}

message RequestVoteRequest {
    uint64 term = 1;
    uint64 candidateId = 2;
    uint64 lastLogIndex = 3;
    uint64 lastLogTerm = 4;
}

message RequestVoteResponse {
    uint64 term = 1;
    bool voteGranted = 2;
}

